# Description: add $(CPPFLAGS) to WFLAGS, making it possible to use globally-defined CPPFLAGS when compiling
#  These are useful at least for the Debian build, where source fortification
#  defines are exported in CPPFLAGS
# Author: Damyan Ivanov <dmn@debian.org>
# Forwarded: yes
--- a/builds/posix/make.rules
+++ b/builds/posix/make.rules
@@ -32,7 +32,7 @@
 
 
 # Please don't use compiler/platform specific flags here - nmcc 02-Nov-2002
-CFLAGS:= $(CFLAGS) -I$(SRC_ROOT)/include/gen -I$(SRC_ROOT)/include -I$(SRC_ROOT)/vulcan -DNAMESPACE=Vulcan
+CFLAGS:= $(CFLAGS) -I$(SRC_ROOT)/include/gen -I$(SRC_ROOT)/include -I$(SRC_ROOT)/vulcan $(CPPFLAGS) -DNAMESPACE=Vulcan
 ifeq ($(STD_ICU),false)
   CFLAGS:= $(CFLAGS) -I$(ROOT)/extern/icu/source/common -I$(ROOT)/extern/icu/source/i18n
 endif
