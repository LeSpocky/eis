# fix GCC warning about deprecated char * conversion
# submitted and accepted upstream
--- a/src/common/config/config_impl.h
+++ b/src/common/config/config_impl.h
@@ -54,7 +54,7 @@ public:
 		TYPE_STRING_VECTOR
 	};
 
-	typedef char* ConfigKey;
+	typedef const char* ConfigKey;
 	typedef IPTR ConfigValue;
 
 	struct ConfigEntry
--- a/src/gpre/pretty.cpp
+++ b/src/gpre/pretty.cpp
@@ -59,7 +59,7 @@ typedef struct ctl {
 } *CTL;
 
 static int blr_format(CTL, const char *, ...);
-static int error(CTL, SSHORT, TEXT *, int);
+static int error(CTL, SSHORT, const TEXT *, int);
 static int indent(CTL, SSHORT);
 static int print_blr_dtype(CTL, bool);
 static void print_blr_line(void*, SSHORT, const char*);
@@ -283,7 +283,7 @@ static int blr_format(CTL control, const
 //		Put out an error msg and punt.
 //  
 
-static int error( CTL control, SSHORT offset, TEXT * string, int arg)
+static int error( CTL control, SSHORT offset, const TEXT * string, int arg)
 {
 
 	print_line(control, offset);
--- a/src/jrd/isc_sync.cpp
+++ b/src/jrd/isc_sync.cpp
@@ -187,7 +187,7 @@ static size_t getpagesize(void)
 
 using namespace Jrd;
 
-static void		error(ISC_STATUS*, TEXT*, ISC_STATUS);
+static void		error(ISC_STATUS*, const TEXT*, ISC_STATUS);
 
 #ifdef UNIX
 static SLONG	find_key(ISC_STATUS *, TEXT *);
@@ -4274,7 +4274,7 @@ static void alarm_handler(void* arg)
 #endif
 
 
-static void error(ISC_STATUS* status_vector, TEXT* string, ISC_STATUS status)
+static void error(ISC_STATUS* status_vector, const TEXT* string, ISC_STATUS status)
 {
 /**************************************
  *
--- a/src/dsql/metd.epp
+++ b/src/dsql/metd.epp
@@ -1746,7 +1746,7 @@ bool METD_get_trigger(dsql_req* request,
 }
 
 
-bool METD_get_type(dsql_req* request, const dsql_str* name, char* field, SSHORT* value)
+bool METD_get_type(dsql_req* request, const dsql_str* name, const char* field, SSHORT* value)
 {
 /**************************************
  *
--- a/src/dsql/metd_proto.h
+++ b/src/dsql/metd_proto.h
@@ -56,7 +56,7 @@ dsql_nod* METD_get_primary_key(dsql_req*
 dsql_prc* METD_get_procedure(dsql_req*, const dsql_str*);
 dsql_rel* METD_get_relation(dsql_req*, const dsql_str*);
 bool   METD_get_trigger(dsql_req*, const dsql_str*, dsql_str**, USHORT*);
-bool   METD_get_type(dsql_req*, const dsql_str*, char*, SSHORT*);
+bool   METD_get_type(dsql_req*, const dsql_str*, const char*, SSHORT*);
 dsql_rel* METD_get_view_base(dsql_req*   request,
 							 const char* view_name,	// UTF-8
 							 MetaNamePairMap& fields);
--- a/src/dsql/misc_func.h
+++ b/src/dsql/misc_func.h
@@ -28,12 +28,12 @@
 class InternalInfo {
 private:
 	struct InfoAttr {
-		char* alias_name;
+		const char* alias_name;
 		unsigned short req_mask;
 	};
 	static const InfoAttr attr_array[max_internal_id];
 public:
-	static char *getAlias(internal_info_id);
+	static const char *getAlias(internal_info_id);
 	static USHORT getMask(internal_info_id);
 };
 
--- a/src/jrd/os/posix/unix.cpp
+++ b/src/jrd/os/posix/unix.cpp
@@ -136,7 +136,7 @@ using namespace Jrd;
 
 static jrd_file* seek_file(jrd_file*, BufferDesc*, FB_UINT64*, ISC_STATUS*);
 static jrd_file* setup_file(Database*, const Firebird::PathName&, int);
-static bool unix_error(TEXT*, const jrd_file*, ISC_STATUS, ISC_STATUS*);
+static bool unix_error(const TEXT*, const jrd_file*, ISC_STATUS, ISC_STATUS*);
 #if defined PREAD_PWRITE && !(defined HAVE_PREAD && defined HAVE_PWRITE)
 static SLONG pread(int, SCHAR *, SLONG, SLONG);
 static SLONG pwrite(int, SCHAR *, SLONG, SLONG);
@@ -1094,7 +1094,7 @@ static jrd_file* setup_file(Database* db
 
 
 static bool unix_error(
-						  TEXT* string,
+						  const TEXT* string,
 						  const jrd_file* file, ISC_STATUS operation,
 						  ISC_STATUS* status_vector)
 {
--- a/src/misc/codes.epp
+++ b/src/misc/codes.epp
@@ -344,7 +344,7 @@ static void build_msgfac_h(void)
 
 	fprintf(msgfac, "struct _facilities {\n");
 	fprintf(msgfac, "\tint  fac_code;\n");
-	fprintf(msgfac, "\tchar *facility;\n");
+	fprintf(msgfac, "\tconst char *facility;\n");
 	fprintf(msgfac, "\t};\n\n");
 
 	fprintf(msgfac, "static const struct _facilities facilities[] = {\n");
--- a/src/include/gen/msg_facs.h
+++ b/src/include/gen/msg_facs.h
@@ -31,7 +31,7 @@
 
 struct _facilities {
 	int  fac_code;
-	char *facility;
+	const char *facility;
 	};
 
 static const struct _facilities facilities[] = {
--- a/src/dsql/misc_func.cpp
+++ b/src/dsql/misc_func.cpp
@@ -34,7 +34,7 @@ const InternalInfo::InfoAttr InternalInf
 	{"INSERTING/UPDATING/DELETING", REQ_trigger}
 };
 
-char* InternalInfo::getAlias(internal_info_id info_id)
+const char* InternalInfo::getAlias(internal_info_id info_id)
 {
 	return attr_array[info_id].alias_name;
 }
--- a/src/dudley/exe.epp
+++ b/src/dudley/exe.epp
@@ -96,7 +96,7 @@ static void erase_userpriv(USERPRIV, TEX
 static void get_field_desc(DUDLEY_FLD);
 static void get_global_fields(void);
 static void get_relations(DBB);
-static USHORT get_prot_mask(TEXT *, TEXT *);
+static USHORT get_prot_mask(const TEXT *, TEXT *);
 static SYM get_symbol(enum sym_t, TEXT *, DUDLEY_CTX);
 static void get_triggers(DBB);
 static void get_udfs(DBB);
@@ -2852,7 +2852,7 @@ static void get_relations( DBB databaseL
 }
 
 
-static USHORT get_prot_mask( TEXT * relation, TEXT * field)
+static USHORT get_prot_mask( const TEXT * relation, TEXT * field)
 {
 /**************************************
  *
--- a/src/dudley/expand.cpp
+++ b/src/dudley/expand.cpp
@@ -50,7 +50,7 @@ static DUDLEY_FLD lookup_field(DUDLEY_FL
 static DUDLEY_FLD lookup_global_field(DUDLEY_FLD);
 static DUDLEY_REL lookup_relation(DUDLEY_REL);
 static DUDLEY_TRG lookup_trigger(DUDLEY_TRG);
-static DUDLEY_CTX make_context(TEXT *, DUDLEY_REL, USHORT);
+static DUDLEY_CTX make_context(const TEXT *, DUDLEY_REL, USHORT);
 static DUDLEY_NOD resolve(DUDLEY_NOD, dudley_lls*, dudley_lls*);
 static void resolve_rse(DUDLEY_NOD, dudley_lls**);
 
@@ -672,7 +672,7 @@ static DUDLEY_TRG lookup_trigger( DUDLEY
 }
 
 
-static DUDLEY_CTX make_context( TEXT * string, DUDLEY_REL relation, USHORT id)
+static DUDLEY_CTX make_context( const TEXT * string, DUDLEY_REL relation, USHORT id)
 {
 /**************************************
  *
--- a/src/dsql/pass1.cpp
+++ b/src/dsql/pass1.cpp
@@ -4740,13 +4740,13 @@ static dsql_nod* pass1_derived_table(dsq
 	// CVC: prepare a truncated alias for the derived table here
 	// because we need it several times.
 	TEXT aliasbuffer[100] = "";
-	TEXT* aliasname = aliasbuffer;
+	const TEXT* aliasname = aliasbuffer;
 	if (alias) {
 		int length = alias->str_length;
 		if (length > 99) {
 			length = 99;
-			memcpy(aliasname, alias->str_data, length);
-			aliasname[length] = 0;
+			memcpy(aliasbuffer, alias->str_data, length);
+			aliasbuffer[length] = 0;
 		}
 		else
 			aliasname = alias->str_data;
