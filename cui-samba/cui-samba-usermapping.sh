#!/bin/bash
# ----------------------------------------------------------------------------
# /var/install/config.d/samba-usermapping.sh - configuration generator script
# for Samba user mapping
#
# Copyright (c) 2014 the eisfair team <team@eisfair.org>
#
# Creation   : 2014-04-29 starwarsfan
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# ----------------------------------------------------------------------------
#set -x
. /var/install/include/eislib
. /etc/config.d/base
. /etc/config.d/samba
. /etc/config.d/samba-usermapping

sambaNativeConfig=/etc/samba/smbusers

createConfigFileHeader()
{
    cat > ${sambaNativeConfig} <<EOF
# ===========================================================================
# This file was generated by the eisfair-ng configuration editor
#
# Do not modify it by hand as it will be overwritten as soon as the
# eisfair-ng configuration editor is used next time configuring samba.
# ===========================================================================

EOF
}

# --------------------------------------------
# Create share sections of samba configuration
createUserMappingConfiguration()
{
    idx=1
    while [ "${idx}" -le "${SAMBA_USERMAP_N}" ] ; do
        eval SAMBA_USERMAP_ACTIVE='$SAMBA_USERMAP_'${idx}'_ACTIVE'
        if [ "$SAMBA_USERMAP_ACTIVE" = 'yes' ] ; then
            eval SAMBA_USERMAP_EISNAME='$SAMBA_USERMAP_'${idx}'_EISNAME'
            eval SAMBA_USERMAP_WINNAME_N='$SAMBA_USERMAP_'${idx}'_WINNAME_N'
            idx2=1
            local winNames=''
            while [ "${idx2}" -le "${SAMBA_USERMAP_WINNAME_N}" ] ; do
                eval SAMBA_USERMAP_WINNAME='$SAMBA_USERMAP_'${idx}'_WINNAME_'${idx2}
                winNames="$winNames \"$SAMBA_USERMAP_WINNAME\""
                idx2=$((idx2+1))
            done
            echo "$SAMBA_USERMAP_EISNAME =${winNames}" >> ${sambaNativeConfig}
        fi
        idx=$((idx+1))
    done
}

# ----------------------------------------------------------------------------
# Main
if [ "$START_SAMBA" = 'yes' ] ; then
    createConfigFileHeader
    createUserMappingConfiguration
fi
exit 0
